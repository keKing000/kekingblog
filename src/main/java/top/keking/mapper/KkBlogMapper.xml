<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.keking.mapper.KkBlogMapper" >
  <resultMap id="BaseResultMap" type="top.keking.pojo.KkBlog" >
    <id column="blogId" property="blogid" jdbcType="VARCHAR" />
    <result column="userId" property="userid" jdbcType="VARCHAR" />
    <result column="blogTitle" property="blogtitle" jdbcType="VARCHAR" />
    <result column="descId" property="descid" jdbcType="VARCHAR" />
    <result column="creatDate" property="creatdate" jdbcType="TIMESTAMP" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="keepNum" property="keepnum" jdbcType="INTEGER" />
    <result column="readNum" property="readnum" jdbcType="INTEGER" />
    <result column="reviewNum" property="reviewnum" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    blogId, userId, blogTitle, descId, creatDate, updateDate, keepNum, readNum, reviewNum, 
    status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="top.keking.pojo.KkBlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kk_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from kk_blog
    where blogId = #{blogid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from kk_blog
    where blogId = #{blogid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="top.keking.pojo.KkBlogExample" >
    delete from kk_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.keking.pojo.KkBlog" >
    insert into kk_blog (blogId, userId, blogTitle, 
      descId, creatDate, updateDate, 
      keepNum, readNum, reviewNum, 
      status)
    values (#{blogid,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, #{blogtitle,jdbcType=VARCHAR}, 
      #{descid,jdbcType=VARCHAR}, #{creatdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}, 
      #{keepnum,jdbcType=INTEGER}, #{readnum,jdbcType=INTEGER}, #{reviewnum,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="top.keking.pojo.KkBlog" >
    insert into kk_blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="blogid != null" >
        blogId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="blogtitle != null" >
        blogTitle,
      </if>
      <if test="descid != null" >
        descId,
      </if>
      <if test="creatdate != null" >
        creatDate,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
      <if test="keepnum != null" >
        keepNum,
      </if>
      <if test="readnum != null" >
        readNum,
      </if>
      <if test="reviewnum != null" >
        reviewNum,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="blogid != null" >
        #{blogid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="blogtitle != null" >
        #{blogtitle,jdbcType=VARCHAR},
      </if>
      <if test="descid != null" >
        #{descid,jdbcType=VARCHAR},
      </if>
      <if test="creatdate != null" >
        #{creatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="keepnum != null" >
        #{keepnum,jdbcType=INTEGER},
      </if>
      <if test="readnum != null" >
        #{readnum,jdbcType=INTEGER},
      </if>
      <if test="reviewnum != null" >
        #{reviewnum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.keking.pojo.KkBlogExample" resultType="java.lang.Integer" >
    select count(*) from kk_blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update kk_blog
    <set >
      <if test="record.blogid != null" >
        blogId = #{record.blogid,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=VARCHAR},
      </if>
      <if test="record.blogtitle != null" >
        blogTitle = #{record.blogtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.descid != null" >
        descId = #{record.descid,jdbcType=VARCHAR},
      </if>
      <if test="record.creatdate != null" >
        creatDate = #{record.creatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedate != null" >
        updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.keepnum != null" >
        keepNum = #{record.keepnum,jdbcType=INTEGER},
      </if>
      <if test="record.readnum != null" >
        readNum = #{record.readnum,jdbcType=INTEGER},
      </if>
      <if test="record.reviewnum != null" >
        reviewNum = #{record.reviewnum,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update kk_blog
    set blogId = #{record.blogid,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=VARCHAR},
      blogTitle = #{record.blogtitle,jdbcType=VARCHAR},
      descId = #{record.descid,jdbcType=VARCHAR},
      creatDate = #{record.creatdate,jdbcType=TIMESTAMP},
      updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      keepNum = #{record.keepnum,jdbcType=INTEGER},
      readNum = #{record.readnum,jdbcType=INTEGER},
      reviewNum = #{record.reviewnum,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.keking.pojo.KkBlog" >
    update kk_blog
    <set >
      <if test="userid != null" >
        userId = #{userid,jdbcType=VARCHAR},
      </if>
      <if test="blogtitle != null" >
        blogTitle = #{blogtitle,jdbcType=VARCHAR},
      </if>
      <if test="descid != null" >
        descId = #{descid,jdbcType=VARCHAR},
      </if>
      <if test="creatdate != null" >
        creatDate = #{creatdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="keepnum != null" >
        keepNum = #{keepnum,jdbcType=INTEGER},
      </if>
      <if test="readnum != null" >
        readNum = #{readnum,jdbcType=INTEGER},
      </if>
      <if test="reviewnum != null" >
        reviewNum = #{reviewnum,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where blogId = #{blogid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.keking.pojo.KkBlog" >
    update kk_blog
    set userId = #{userid,jdbcType=VARCHAR},
      blogTitle = #{blogtitle,jdbcType=VARCHAR},
      descId = #{descid,jdbcType=VARCHAR},
      creatDate = #{creatdate,jdbcType=TIMESTAMP},
      updateDate = #{updatedate,jdbcType=TIMESTAMP},
      keepNum = #{keepnum,jdbcType=INTEGER},
      readNum = #{readnum,jdbcType=INTEGER},
      reviewNum = #{reviewnum,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where blogId = #{blogid,jdbcType=VARCHAR}
  </update>
  <!-- 分页查询博客列表映射关系 -->
  <resultMap type="top.keking.pojo.KkBlog" id="BlogUserDescResultMap">
  	<id column="blogId" property="blogid" />
    <result column="userId" property="userid" />
    <result column="blogTitle" property="blogtitle" />
    <result column="descId" property="descid" />
    <result column="creatDate" property="creatdate" />
    <result column="updateDate" property="updatedate" />
    <result column="keepNum" property="keepnum" />
    <result column="readNum" property="readnum" />
    <result column="reviewNum" property="reviewnum" />
    <result column="status" property="status" />
    <association property="user" javaType="top.keking.pojo.KkUser">
    	<id column="userId" property="userid" />
    	<result column="userName" property="username"/>
    	<result column="userPic" property="userpic"/>
    </association>
    <association property="desc" javaType="top.keking.pojo.KkDesc">
    	<id column="descId" property="descid" />
    	<result column="content" property="content"/>
    </association>
  </resultMap>
  <!-- 分页查询博客列表 -->
  <select id="selectToPageList" parameterType="map" resultMap="BlogUserDescResultMap">
  	select
  	kk_blog.blogId, kk_blog.userId, kk_blog.blogTitle, kk_blog.descId, kk_blog.creatDate, kk_blog.updateDate, kk_blog.keepNum, kk_blog.readNum, kk_blog.reviewNum, kk_blog.status, kk_user.userId, kk_user.userName, kk_user.userPic 
  	from kk_blog
  	join kk_user
  	on kk_blog.userId = kk_user.userId
  	<where>
  		<if test="status != null">
  			kk_blog.status=#{status}
  		</if>
  		<if test="userId != null">
  			and kk_blog.userId=#{userId}
  		</if>
  	</where>
  	order by kk_blog.creatDate desc
  	limit #{start},#{count}
  </select>
  <!-- 热门列表查询 -->
  <select id="selectToHostList" parameterType="int" resultMap="BlogUserDescResultMap">
  	select
  	kk_blog.blogId, kk_blog.userId, kk_blog.blogTitle, kk_user.userId, kk_user.userPic
  	from kk_blog
  	join kk_user
  	on kk_blog.userId = kk_user.userId
  	where
  	kk_blog.status=0
  	order by kk_blog.readNum desc
  	limit 0,#{count}
  </select>
  <!-- 网站管理分页查询博客列表 -->
  <select id="selectToManagerList" parameterType="map" resultMap="BlogUserDescResultMap">
  	select
  	kk_blog.blogId, kk_blog.userId, kk_blog.blogTitle, kk_blog.updateDate, kk_blog.keepNum, kk_blog.status, kk_user.userId, kk_user.userName, kk_user.userPic 
  	from kk_blog
  	join kk_user
  	on kk_blog.userId = kk_user.userId
  	where
  	kk_blog.status=0 or kk_blog.status=1
  	order by kk_blog.creatDate desc
  	limit #{start},#{count}
  </select>
  <!-- 显示博客内容查询 -->
  <select id="selectBlogByBlogId" parameterType="string" resultMap="BlogUserDescResultMap">
  	select
  	kk_blog.blogId, kk_blog.blogTitle, kk_blog.updateDate, kk_blog.keepNum, kk_blog.readNum, kk_blog.reviewNum,
  	kk_user.userId, kk_user.userPic, kk_user.userName,
  	kk_desc.descId, kk_desc.content
  	from kk_blog
  	join kk_user
  	on kk_blog.userId=kk_user.userId
  	join kk_desc
  	on kk_blog.blogId=kk_desc.blogId
  	where
  	kk_blog.blogId=#{blogId}
  </select>
  <!-- 阅读数加一 -->
  <update id="updateReadNum" parameterType="string">
  	update kk_blog
  	set readNum=readNum+1
  	where
  	blogId=#{blogId}
  </update>
  <!-- 收藏数加一 -->
  <update id="updateKeepNum" parameterType="string">
  	update kk_blog
  	set keepNum=keepNum+1
  	where
  	blogId=#{blogId}
  </update>
  <!-- 评论数加一 -->
  <update id="updateReviewNum" parameterType="string">
  	update kk_blog
  	set reviewNum=reviewNum+1
  	where
  	blogId=#{blogId}
  </update>
  <!-- 搜索查询 -->
   <select id="searchToPageList" parameterType="map" resultMap="BlogUserDescResultMap">
  	select
  	kk_blog.blogId, kk_blog.userId, kk_blog.blogTitle, kk_blog.descId, kk_blog.creatDate, kk_blog.updateDate, kk_blog.keepNum, kk_blog.readNum, kk_blog.reviewNum, kk_blog.status, kk_user.userId, kk_user.userName, kk_user.userPic 
  	from kk_blog
  	join kk_user
  	on kk_blog.userId = kk_user.userId
  	where
  	kk_blog.status=0 and kk_blog.blogTitle like #{keyWord}
  	order by kk_blog.creatDate desc
  	limit #{start},#{count}
  </select>
</mapper>